@model IEnumerable<WebApplication1.Models.ApplicationUser>
@using WebApplication1.Models;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<h2>Users</h2>
<hr />
@using (Html.BeginForm("Search", "ApplicationUsers", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-5 col-md-offset-1">
            <div class="form-group">
                <input type="text" name="searchName" class="form-control" placeholder="Search for user by user name, Email, phone number, branch name or user type ...">
            </div>
        </div>
        <div class="col-md-2">
            <button type="submit" value="Search" class="btn btn-default btn-block"><span class="glyphicon glyphicon-search"></span> Search</button>
        </div>
        @if (User.IsInRole("Admins"))
        {
            <div class="col-md-2">
                <a class="btn btn-default btn-block" href=@Url.Action("AddUser","Account")>
                    <span class="glyphicon glyphicon-plus-sign"></span> Create New User
                </a>
            </div>
        }
    </div>
}

@if (Model != null && Model.Count() > 0)
{
    <table class="table table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayName("Branch Name")
            </th>
            <th>
                @Html.DisplayName("User Type")
            </th>
            @if (User.IsInRole("Admins"))
                {
                <th></th>
            }

        </tr>
        @foreach (var item in Model)
        {
            var db = new ApplicationDbContext();
            var Branch = db.Branches.Find(item.BranchId);
            var RoleId = db.Users.Find(item.Id).Roles.Select(a => a.RoleId).SingleOrDefault();
            var RoleName = db.Roles.Find(RoleId).Name;
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @if (Branch == null)
                    {
                        @Html.DisplayName("No Branch")
                    }
                    else
                    {
                        @Html.DisplayName(Branch.BranchName)
                    }
                </td>
                <td>
                    @Html.DisplayName(RoleName)
                </td>
                @if (User.IsInRole("Admins"))
                    {
                    <td>
                        <a title="Edit" href=@Url.Action("Edit", new { id = item.Id })>
                            <span class="glyphicon glyphicon glyphicon-edit" style="font-size:large"></span>
                        </a> |
                        <a title="Delete" href=@Url.Action("Delete", new { id = item.Id }) onclick="return confirm('Are you sure you want to delete this user?')">
                            <span class="glyphicon glyphicon glyphicon-trash" style="font-size:large"></span>
                        </a>
                    </td>
                }

            </tr>
        }
    </table>
}
else
{
    <div class="alert alert-danger">
    <h4 style="font-weight:bolder">
        <span class="glyphicon glyphicon-remove">
        </span> No rows to display!
    </h4>
</div>
}

@switch ((string)ViewBag.Result)
            {
                case "Created":
                    {
            <div class="alert alert-success" id="error-div">
                <span class="glyphicon glyphicon-ok"></span>
                <span>
                    The user has been created successfully.
                </span>
            </div>
        }
        break;
    case "Edited":
        {
            <div class="alert alert-success" id="error-div">
                <span class="glyphicon glyphicon-ok"></span>
                <span>
                    The user has been edited successfully.
                </span>
            </div>
        }
        break;
    case "Deleted":
        {
            <div class="alert alert-success" id="error-div">
                <span class="glyphicon glyphicon-ok"></span>
                <span>
                    The user has been deleted successfully.
                </span>
            </div>
        }
        break;
    case "Error":
        {
            <div class="alert alert-danger" id="error-div">
                <span class="glyphicon glyphicon-remove"></span>
                <span>
                    You can not delete this user!
                </span>
            </div>
        }
        break;
}
@section scripts{
    <script>
        $(document).ready(function () {
            $("#error-div").delay(3000).fadeOut();
        });
    </script>
}
